/*
 * Copyright 2019 Haulmont.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package data_components

import io.jmix.ui.model.DataComponents
import test_support.DataContextSpec
import test_support.entity.TestIdentityIdEntity

import javax.inject.Inject

class DataContextIdProxyTest extends DataContextSpec {

    @Inject DataComponents factory

    @SuppressWarnings("GroovyAccessibility")
    def "identity-id entity merged after assigning id generated by database"() {
        def entity = new TestIdentityIdEntity(name: 'aaa')

        def dataContext = factory.createDataContext()

        def merged = dataContext.merge(entity)

        when:

        TestIdentityIdEntity serverSideEntity = reserialize(merged)
        serverSideEntity.setDbGeneratedId(10)
        TestIdentityIdEntity returnedEntity = reserialize(serverSideEntity)

        TestIdentityIdEntity mergedReturnedEntity = dataContext.merge(returnedEntity)

        then:

        mergedReturnedEntity.getId().get() == 10
    }
}
